#!/usr/bin/env bash
#
# chk_dupes 1.0.0, 2024-04-05
#
# Project description:
# Quick and dirty geschriebenes Script, das hilft Dateidubletten zu entfernen.
#
# Aufruf
# in einem Verzeichnis mit einem oder mehreren Verzeichnisnamensanfaengen
# unmittelbarer Unterordner. Beispielsweise:
#
# chk_dupes A B C  # Alle direkten Unterverzeichnisse, die mit A oder B oder C beginnen.
#
# Das Script ermittelt in einem ersten schnellen Durchlauf alle Verzeichnisse mit
# Dubletten, schreibt deren Namen in eine Datei namens "folders" und geht diese
# Verzeichnisse dann mit dem Anwender im Dialog durch.
#
# Fuer mich war das Script eine Hilfe beim Aufraeumen; wie solide das Hilfsprogramm
# 'fdupes' arbeitet, kann ich nicht garantieren. Normalerweise muesste es sehr
# verlaesslich sein. (Identifikation von Dubletten durch einen md5-Hashwerrt,
# also am Dateiinhalt unabhängig vom Dateinamen.
#
# ABHAENGIGKEITEN
#
# Installiert sein muessen 'tree' und 'fdupes'.
#
# Author: Bernd Storck, https://www.facebook.com/BStLinux/
#
# Copyright: Nervt mich nicht! :-)
#

VERSION="1.0.0"

usage() {
echo " chk_dupes $VERSION

 AUFRUF

 in einem Verzeichnis mit einem oder mehreren Verzeichnisnamensanfaengen
 unmittelbarer Unterordner. 

 Um beispielsweise alle direkten Unterverzeichnisse, die mit A oder B oder C
 beginnen, zu überprüfen:

   chk_dupes A B C  

 Das Programm arbeitet im Dialog: Zu allen Dubletten die es findet, fragt es den
 Anwender, welche er behalten (!) moechte. Will man eine Datei behalten, gibt man
 deren Nummer ein. Moechte man mehrere behalten, kann man mehrere Nummern
 eingeben, und zwar getrennt durch \", \", also ein Komma und ein folgendes
 Leerzeichen. Moechte man alle Dateien behalten, gibt man das Wort \"all\"
 ein.

 Man sollte genau hingucken und in Zweifelsfaellen parallel ueberpruefen, welche
 Dateien als gleich oder loeschbar angefuehrt werden.
"
}

case "$1" in
  -h|--help|--hilf|-help|-hilf)
    usage; exit;;
esac

stop_execution=

# Error messages bbecause of unfullfilled dependencies:
for needed_prog in tree fdupes; do
  if ! command -v "$needed_prog" >/dev/null 2>&1; then
    echo >&2 "Das Programm '$needed_prog' fehlt."  > /dev/stderr
    stop_execution="forced"
  fi
done

if [ -n "$stop_execution" ]; then
  echo "Abbruch: Installieren Sie die notwenigen Programme!" > /dev/stderr
  exit 1
fi

# Build string with alternative folder name beginnings:
alternatives=
for i in "$@"; do
  alternatives="$alternatives|$i"
done
alternatives="${alternatives##|}"


# Write the file 'list' containing the names of all direct sub folders:
rm folders 2> /dev/null
tree -d -L 1 | cut -d' '  -f2 | grep -E "^\b($alternatives)" > list

# Write the file "folders" with the names of the folders with dupes:
while read -r line; do
  if fdupes -qr "$line" | grep .; then
    echo "$line" >> folders
  fi
done < list

# Starts dialogical delete session:
if [ -f folders ]; then
  cat folders
  sleep 3
  while read -r line; do
    echo -e "\nOrdner \"$line\":"
    sleep 2
    echo
    fdupes -rd "$line"
  done < folders
else
  echo "Keine Verzeichnisse mit Dubletten gefunden!"
fi

rm -f list 2> /dev/null
